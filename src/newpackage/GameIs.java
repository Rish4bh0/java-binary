/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package newpackage;
import java.awt.Desktop;
import java.awt.HeadlessException; 
import java.io.File;
import java.util.ArrayList; 
import javax.swing.JOptionPane; 
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel; 
import javax.swing.table.TableRowSorter;




/**
 *
 * @author risha
 */

public class GameIs extends javax.swing.JFrame {
    
    String radioText = "";  
    ArrayList<Gears> list = new ArrayList<Gears>(); 
    Gears obj;
    int checkArray[];

    /**
     * Creates new form GameIs
     */
    public GameIs() { 
        initComponents();
        addRowToJTable();
    }
//Inner Class
    
    public class Gears{
        public String id;
        public String product_name;
        public String category;
        public String specification;
        public int price;
        
        
        public Gears(String id, String product_name, String category, String
                specification,int price){
            
            this.id = id;
            this.product_name = product_name;
            this.category = category;
            this.specification = specification;
            this.price = price;
        }
        
    }
    
    public ArrayList listGears(){
        list = new ArrayList<Gears>();
        Gears g1 = new Gears("H4FH", "Ducky One 2 Mini", "Keyboard", "RGB", 150); 
        Gears g2 = new Gears("O3I4", "GK61", "Keyboard", "RGB", 180); 
        Gears g3 = new Gears("2OP3", "Anne Pro 2", "Keyboard", "NonRGB", 120);
        Gears g15 = new Gears("CV89", "ASTRO A50", "Headphone", "NonRGB", 160); 
        Gears g5 = new Gears("L23K", "Crorsair HS50", "Headphone", "RGB", 180);
        Gears g9 = new Gears("ZXC7", "SteelSeries Arctis Pro", "Headphone", "RGB", 140); 
        Gears g7 = new Gears("2M13", "Razer Viper Mini", "Mouse", "NonRGB", 169);
        Gears g8 = new Gears("C09V", "Logitech G903", "Mouse", "RGB", 160); 
        Gears g6 = new Gears("ZXC3", "SteelSeries Sensi 310", "Mouse", "RGB", 120);
        Gears g10 = new Gears("V8C8", "ASUS XG27UQ", "Monitor", "RGB", 95); 
        Gears g14 = new Gears("M2N3", "Razer Raptor", "Monitor", "NonRGB", 90);
        Gears g12 = new Gears("9SDF", "AOC 24G2", "Monitor", "RGB", 69);
        Gears g13 = new Gears("9d78", "Edifer G2000", "Speaker", "RGB", 111); 
        Gears g11 = new Gears("l2k3", "Klipsch R-51PM", "Speaker", "NonRGB", 132);
        Gears g4 = new Gears("n79b", "Logitech Z906", "Speaker", "RGB", 180);
        list.add(g1);
        list.add(g2);
        list.add(g3);
        list.add(g4);
        list.add(g5);
        list.add(g6);
        list.add(g7);
        list.add(g8);
        list.add(g9);
        list.add(g10);
        list.add(g11);
        list.add(g12);
        list.add(g13);
        list.add(g14);
        list.add(g15);
        return list;




}
public void addRowToJTable() { 
    try {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        ArrayList<Gears> list = listGears();
        Object rowData[] = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            rowData[0] = list.get(i).id;
            rowData[1] = list.get(i).product_name; 
            rowData[2] = list.get(i).category; 
            rowData[3] = list.get(i).specification; 
            rowData[4] = list.get(i).price; 
            model.addRow(rowData);
}




} catch (Exception e) {

JOptionPane.showMessageDialog(rootPane,	e.getMessage()	+
        "Please	try again!");
}
 


        
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myGroup = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        product_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JRadioRGB = new javax.swing.JRadioButton();
        jRadioNonRGB = new javax.swing.JRadioButton();
        combo = new javax.swing.JComboBox<>();
        price = new javax.swing.JTextField();
        product_name = new javax.swing.JTextField();
        jButtonADD = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        combo1 = new javax.swing.JComboBox<>();
        jButtonSearchCategory = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItemExit1 = new javax.swing.JMenuItem();
        jMenuHelp1 = new javax.swing.JMenu();
        jMenuItemUserGuide = new javax.swing.JMenuItem();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));
        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        product_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_idActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel1.setText("Product ID:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel2.setText("Product Name:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel3.setText("Category:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel4.setText("Specification:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel5.setText("Price:");

        JRadioRGB.setBackground(new java.awt.Color(255, 255, 255));
        myGroup.add(JRadioRGB);
        JRadioRGB.setText("RGB");
        JRadioRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRadioRGBActionPerformed(evt);
            }
        });

        jRadioNonRGB.setBackground(new java.awt.Color(255, 255, 255));
        myGroup.add(jRadioNonRGB);
        jRadioNonRGB.setText("NonRGB");
        jRadioNonRGB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioNonRGBActionPerformed(evt);
            }
        });

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--------------------------------", "Keyboard", "Headphone", "Monitor", "Mouse", "Speaker" }));
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });

        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        jButtonADD.setBackground(new java.awt.Color(0, 204, 51));
        jButtonADD.setText("Add");
        jButtonADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonADDActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(255, 0, 51));
        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Catgory", "Specification", "Price"
            }
        ));
        table.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(table);

        jButtonSearch.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSearch.setText("Search by price");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Keyboard", "Headphone", "Monitor", "Mouse", "Speaker" }));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        jButtonSearchCategory.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSearchCategory.setText("Search By Category");
        jButtonSearchCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchCategoryActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/game-icon-png-4478.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        jLabel7.setText("Game Store Information System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(100, 100, 100))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel7))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 26)); // NOI18N
        jLabel10.setText("Product List");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel1))
                                        .addGap(35, 35, 35)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(JRadioRGB)
                                                .addGap(18, 18, 18)
                                                .addComponent(jRadioNonRGB, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(product_id)
                                            .addComponent(product_name)
                                            .addComponent(combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(price))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonADD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonClear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(jButtonSearch)
                                .addGap(58, 58, 58)
                                .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSearchCategory))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(product_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(product_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JRadioRGB)
                    .addComponent(jRadioNonRGB)
                    .addComponent(jButtonADD))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButtonClear))
                .addGap(56, 56, 56)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearchCategory))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jMenu2.setText("File");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Open File");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItemExit1.setText("Exit");
        jMenuItemExit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExit1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemExit1);

        jMenuBar2.add(jMenu2);

        jMenuHelp1.setText("Help");
        jMenuHelp1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelp1ActionPerformed(evt);
            }
        });

        jMenuItemUserGuide.setText("User Guide");
        jMenuItemUserGuide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUserGuideActionPerformed(evt);
            }
        });
        jMenuHelp1.add(jMenuItemUserGuide);

        jMenuBar2.add(jMenuHelp1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void product_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_idActionPerformed

    private void jRadioNonRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioNonRGBActionPerformed
        if (jRadioNonRGB.isSelected()) {
            jRadioNonRGB.setActionCommand(jRadioNonRGB.getText()); 
            JRadioRGB.setSelected(false);


}

    }//GEN-LAST:event_jRadioNonRGBActionPerformed

    private void JRadioRGBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRadioRGBActionPerformed
        if (JRadioRGB.isSelected()) {
            JRadioRGB.setActionCommand(JRadioRGB.getText());
            jRadioNonRGB.setSelected(false);
        }

    }//GEN-LAST:event_JRadioRGBActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        product_id.setText("");
        product_name.setText(""); 
        combo.setSelectedIndex(0);
        myGroup.clearSelection();
        price.setText("");

    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonADDActionPerformed
            try {
                String id = product_id.getText();
                String name = product_name.getText();
                String category = (String) combo.getSelectedItem();
                String spiciness = myGroup.getSelection().getActionCommand();
                int cost = Integer.parseInt(price.getText());
                boolean flag = false;
                DefaultTableModel model = (DefaultTableModel) table.getModel();




// To get all the rows of Column 0 i.e. ID
for (int row = 0;
        row < table.getRowCount();
        row++) { String check = (String) model.getValueAt(row, 0);
 


//Checks if the rows of Coloumn 0 in table equals to the input in Product ID 
if (check.equals(id)) {
    flag = true;
}
}

// displays when input in Product Id textfield matches the values in Price Column 
if (flag == true) {
    JOptionPane.showMessageDialog(rootPane, "Product ID Already Exists");

// displays when there is no input in the textfield of Product ID

} else if (id.isEmpty()) {
    JOptionPane.showMessageDialog(rootPane, "Product ID cannot be empty");

}

// displays when input in the textfield of Price equals 0 
else if (cost == 0) {
    JOptionPane.showMessageDialog(rootPane, "Price must be greater than 0");

// displays when Category is not selected
 
} else if (category.contains("----------------")) {
    JOptionPane.showMessageDialog(rootPane, "Please choose product category!");
}

// displays when none of the radio button is selected
else if (!JRadioRGB.isSelected() && !jRadioNonRGB.isSelected()) { 
    JOptionPane.showMessageDialog(rootPane, "Please select Specification of the Product");

}

// displays when there is no input in the textfield of Product Name 
else if (name.isEmpty()) {
    JOptionPane.showMessageDialog(rootPane,	"Product name cannot be empty");

}

// adds data got from all the textfields into the table 
else {
    JOptionPane.showMessageDialog(rootPane, "Data added successfully"); 
    model.addRow(new Object[]{id, name, category, spiciness, cost});
 
}




} catch (NullPointerException e) {
    JOptionPane.showMessageDialog(rootPane, "Enter data into the fields!");
} catch (NumberFormatException m) {
    JOptionPane.showMessageDialog(rootPane, m.getMessage()+ ":" + "\n Enter numeric value for this field");
} catch (HeadlessException s) {
    JOptionPane.showMessageDialog(rootPane, s.getMessage() + ":" + "\n Please try again!");
}

    }//GEN-LAST:event_jButtonADDActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
//Calls	sorting searching method
        try{
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            checkArray = new int[table.getRowCount()];
            for (int row = 0; row < table.getRowCount(); row++) { 
                int check = (Integer) model.getValueAt(row, 4);
                checkArray[row] = check;
            }
            selectionshort(checkArray);
            boolean found=false;
            int toFind = Integer.parseInt(jTextFieldSearch.getText());

//Passing parameters in binarySearch method
int search = binarySearch(checkArray, toFind);//1
if (search == -1) {
    JOptionPane.showMessageDialog(rootPane, "Price not found");
} else {

//Linear Search

for (int i = 0; i < table.getColumnCount(); i++) {
for (int row = 0; row < table.getRowCount(); row++) { 
    int check = (Integer) model.getValueAt(row, 4); checkArray[row] = check;
}

// Passing parameters in linearSearch method
int linear= linearSearch(checkArray, toFind); if(linear==-1){
    JOptionPane.showMessageDialog(rootPane, "Price not found");

}

else{
    for(int s=0;s<table.getColumnCount();s++){ found=true;
}
if(found==true){ JOptionPane.showMessageDialog(this,"Search Result Found"+"\n"+"Product ID: "+" "+table.getValueAt(linear,0).toString()+"\n"+"Product Name: "+" "+table.getValueAt(linear,1).toString()+"	\n"+"Category:	"+" "+table.getValueAt(linear,2).toString()+"\n"+"Specification:	"+" "+table.getValueAt(linear,3)+"\n"+"Price: "+table.getValueAt(linear,4)); 
break;
}
}
}
}
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(rootPane,e.getMessage()+"\n"+"Please enter numeric value for this field!");
        }catch(Exception s){ JOptionPane.showMessageDialog(rootPane,s.getMessage());
}




}

//Linear Searching

public int linearSearch(int arr[],int target){
    for(int i=0; i<arr.length;i++){ if(arr[i]==target){
        return i;

}

}
    return -1;



    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed

    String check = (String) combo1.getSelectedItem();
    jButtonSearchCategory.setText("Find " + check);

    }//GEN-LAST:event_comboActionPerformed

    private void jButtonSearchCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchCategoryActionPerformed
        DefaultTableModel model = (DefaultTableModel) table.getModel(); 
        TableRowSorter sorter = new TableRowSorter<DefaultTableModel>(model);
        table.setRowSorter(sorter);
        RowFilter<DefaultTableModel,	Object>	filter	= RowFilter.regexFilter(combo1.getSelectedItem().toString(), 2);
        if (combo1.getSelectedItem().equals("All")) { 
            table.setRowSorter(sorter);
            String[] checkArray = new String[sorter.getViewRowCount()]; 
            String name = "";
        } else {
            sorter.setRowFilter(filter);
            String combobox = (String) combo1.getSelectedItem(); 
            JOptionPane.showMessageDialog(null, "Total Number of " + combobox + ":" + " " + sorter.getViewRowCount());
        }
    }
 


//Binary Search

 public int binarySearch(int[] array, int toFind) {


try {
    int low = 0;
    int high = array.length - 1;
    int mid = 0;
    while (low <= high) { 
        mid = (low + high) / 2;
        if (array[mid] == toFind) { 
            return mid;
        } else if (toFind < array[mid]) { high = mid - 1;
        } else {
            low = mid + 1;

}

}

} catch (Exception e) {

}

return -1;


    }//GEN-LAST:event_jButtonSearchCategoryActionPerformed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo1ActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void jMenuItemExit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExit1ActionPerformed
        // TODO add your handling code here:
         int dialog = JOptionPane.showConfirmDialog(rootPane,"Are you sure you want to exit?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (dialog == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItemExit1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
   
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuHelp1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelp1ActionPerformed
    }//GEN-LAST:event_jMenuHelp1ActionPerformed

    private void jMenuItemUserGuideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUserGuideActionPerformed
// Opens File for opening an existing file i.e.documents.pdf
try{
    File file= new File("src\\file\\UserManual.pdf");
    if(file.exists()){
        if(Desktop.isDesktopSupported()){
            Desktop.getDesktop().open(file);
        }else{
            JOptionPane.showMessageDialog(this, "File not supported");
            
        }
    }else{
        JOptionPane.showMessageDialog(this, "File does not exixt");
    }
    
}catch(Exception e){
    e.printStackTrace();
}

    }//GEN-LAST:event_jMenuItemUserGuideActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
       
       
      
       
    }//GEN-LAST:event_jMenu2ActionPerformed
public void selectionshort(int[] checkArray) {

//Selection short in ascending order
int minPos;
int n = checkArray.length;
for (int i = 0; i < n; i++) {
minPos = i;

for (int j = i + 1; j < n; j++) {

if (checkArray[j] < checkArray[minPos]) { 
    minPos = j;
 
}

}

int temp = checkArray[minPos]; 
checkArray[minPos] = checkArray[i];
checkArray[i] = temp;



}




}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameIs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameIs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameIs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameIs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameIs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton JRadioRGB;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonADD;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSearchCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenu jMenuHelp1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItemExit1;
    private javax.swing.JMenuItem jMenuItemUserGuide;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioNonRGB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.ButtonGroup myGroup;
    private javax.swing.JTextField price;
    private javax.swing.JTextField product_id;
    private javax.swing.JTextField product_name;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
